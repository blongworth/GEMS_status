[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "GEMS Telemetry",
    "section": "",
    "text": "Get and parse data sent to GEMS website. Data from 2025-06-23 to present."
  },
  {
    "objectID": "index.html#status",
    "href": "index.html#status",
    "title": "GEMS Telemetry",
    "section": "Status",
    "text": "Status\n\nLast post was 2025-07-07 10:20:25\nHow many status lines are in the wrong year?\n\n\nJoining with `by = join_by(send)`\n\n\n\n\n\n\n\n\n\n\n\nTeensy Temp\nJunction temp of Surface teensy. Runs at 50C at room temp. &gt;95C kills teensies.\n\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\nWarning: Removed 926 rows containing missing values or values outside the scale range\n(`geom_segment()`).\n\n\n\n\n\n\n\n\n\n\n\nBattery\n\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\nWarning: Removed 3 rows containing missing values or values outside the scale range\n(`geom_segment()`).\n\n\n\n\n\n\n\n\n\n\n\nTurbo\n\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\nWarning: Failed to fit group -1.\nCaused by error in `gam.reparam()`:\n! NA/NaN/Inf in foreign function call (arg 3)\n\n\nWarning: Removed 3 rows containing missing values or values outside the scale range\n(`geom_segment()`).\n\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\nWarning: Removed 3 rows containing missing values or values outside the scale range\n(`geom_segment()`).\n\n\n\n\n\n\n\n\n\n\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'"
  },
  {
    "objectID": "index.html#rga",
    "href": "index.html#rga",
    "title": "GEMS Telemetry",
    "section": "RGA",
    "text": "RGA\n\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\nWarning: Removed 1 row containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\nWarning: Removed 1 row containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\nOxygen\n\n\n\n\n\n\n\n\nCarbon dioxide\n\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\n\n\n\n\n\n\nMethane\n\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\nWarning: Removed 576 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\n\n\n\n\n\n\nHydrogen sulphide\n\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\nWarning: Removed 322 rows containing non-finite outside the scale range\n(`stat_smooth()`)."
  },
  {
    "objectID": "index.html#adv",
    "href": "index.html#adv",
    "title": "GEMS Telemetry",
    "section": "ADV",
    "text": "ADV\n\nPressure/Depth\n\n\n\n\n\n\n\n\n\n\n\nADV Correlation\n\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\n\n\n\n\n\n\n\n\n\nADV Amplitude\n\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\n\n\n\n\n\n\n\n\n\nADV Vertical Velocity\n\n\nWarning: Removed 72 rows containing missing values or values outside the scale range\n(`geom_pointrange()`).\n\n\nWarning: Removed 659 rows containing missing values or values outside the scale range\n(`geom_segment()`).\n\n\n\n\n\n\n\n\n\n\n\nADV Alongshore Velocity\nADV set up with x axis parallel to shore. Positive is North.\n\n\nWarning: Removed 27 rows containing missing values or values outside the scale range\n(`geom_segment()`).\n\n\n\n\n\n\n\n\n\n\n\nADV Onshore velocity\nPositive is offshore\n\n\nWarning: Removed 30 rows containing missing values or values outside the scale range\n(`geom_segment()`)."
  },
  {
    "objectID": "index.html#imu-data",
    "href": "index.html#imu-data",
    "title": "GEMS Telemetry",
    "section": "IMU data",
    "text": "IMU data\n\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\nWarning: Failed to fit group -1.\nCaused by error in `gam.reparam()`:\n! NA/NaN/Inf in foreign function call (arg 3)\n\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'"
  },
  {
    "objectID": "index.html#data-issues",
    "href": "index.html#data-issues",
    "title": "GEMS Telemetry",
    "section": "Data issues",
    "text": "Data issues\n\nBad Packets\nGarbled status or data packets. These need to be filtered out before timestamping. These should be caught on the lander by adding a checksum. Also need to check whether data is corrupted from ADV-lander, lander-surface, or surface-web.\n\n\nOut of order packets\nNot sure what causes this. Happening on the server side. Maybe parallel processing of POST requests? Handled by sorting each send by packet number.\n\n\nMissing data\nMissing data includes bad packets. Need to separate out.\n\n\nJoining with `by = join_by(send)`\n`summarise()` has grouped output by 'send'. You can override using the\n`.groups` argument.\n\n\n\n\n\n\n\n\n\n\n\nPost times\n\n\n\n\n\ntimestamp\nsend\nrow_count\n\n\n\n\n2025-07-07 07:10:25\n2058\n500\n\n\n2025-07-07 07:20:25\n2059\n500\n\n\n2025-07-07 07:30:25\n2060\n500\n\n\n2025-07-07 07:40:25\n2061\n500\n\n\n2025-07-07 07:50:25\n2062\n500\n\n\n2025-07-07 08:00:24\n2063\n500\n\n\n2025-07-07 08:10:25\n2064\n499\n\n\n2025-07-07 08:20:25\n2065\n500\n\n\n2025-07-07 08:30:25\n2066\n500\n\n\n2025-07-07 08:40:25\n2067\n500\n\n\n2025-07-07 08:50:00\n2068\n500\n\n\n2025-07-07 09:00:25\n2069\n500\n\n\n2025-07-07 09:10:25\n2070\n500\n\n\n2025-07-07 09:20:25\n2071\n500\n\n\n2025-07-07 09:30:25\n2072\n500\n\n\n2025-07-07 09:40:25\n2073\n500\n\n\n2025-07-07 09:50:24\n2074\n500\n\n\n2025-07-07 10:00:00\n2075\n500\n\n\n2025-07-07 10:10:25\n2076\n500\n\n\n2025-07-07 10:20:25\n2077\n500\n\n\n\n\n\n\n\nLines per post\n\n\nWarning: Removed 3 rows containing missing values or values outside the scale range\n(`geom_point()`)."
  }
]